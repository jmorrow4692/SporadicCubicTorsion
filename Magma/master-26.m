//////////////////////////////////////////////////////////////////////////////////////////
//  This is a complete determination of the cubic points on X1(26)
//////////////////////////////////////////////////////////////////////////////////////////
 
/****************************************************************************** 
 Here is a summary of the argument.
 
 X_1(26) has genus 10, and rank 0.
 The torsion subgroup is [133, 1995],
 and is generated by differences of rational points.

 There are phi(26)/2 = 12 rational cusps and 0 quadratic or cubic cusps.

 Computing the inverse image of Abel-Jacobi succeeds. 
 It is slow to do this directly, so instead, we work mod 3, and note that
 there are 12 F_3 points, 0 F_9 points, and 16 F_27 points. 

 We compute that the images of the 16 F_27 points under Abel--Jacobi
 do not meet the reduction of the global torsion. 
 
 One subtlety of this case is that it greatly speeds things up to work
 on a singular model.
 
******************************************************************************/

  N := 26; 

  
  //////////////////////////////////////////////////////////////////////////////////////////
  // Input the homebrewed functions 
  //////////////////////////////////////////////////////////////////////////////////////////
  
  load "functions.m";

  
  //////////////////////////////////////////////////////////////////////////////////////////
  // Equations for X1(26), from Derickx--Sutherland
  //////////////////////////////////////////////////////////////////////////////////////////
  
  F := Rationals();
  P<[t]> := ProjectiveSpace(F,9);       
  A2<x,y> := AffineSpace(F,2);

  X:=Curve(A2,y^6 + (3*x^2 + 4*x - 2)*y^5 + (3*x^4 + 10*x^3 - 9*x + 1)*y^4 + (x^6 + 7*x^5 + 8*x^4 - 14*x^3 - 11*x^2 + 6*x)*y^3 + (x^7 + 4*x^6 - x^5 - 13*x^4 + 2*x^3 + 10*x^2 - x)*y^2 - (x^6 - 7*x^4 - 4*x^3 + 2*x^2)*y - x^4 - x^3);
  Xp := ProjectiveClosure(X);

  
  //////////////////////////////////////////////////////////////////////
  // Compute the local torsion bound
  //////////////////////////////////////////////////////////////////////   
/*
//  for p in [q : q in PrimesUpTo(40) | not q in PrimeDivisors(2*N) ] do
  torsData := {@@};
  for p in [3,5 ] do     
      invs := Invariants(ClassGroup(Curve(Reduction(X,p))));
      torsData := torsData join {@invs@};
      <p,invs>;
  end for;

  // 3 [ 665, 1995, 0 ]
  // 5 [ 7, 133, 29925, 0 ]      

    "The rational torsion subgroup is a subgroup of", torsBound(torsData); ; // [133, 1995]
*/  
  
  ////////////////////////////////////////////////////////////////////////
  // Compute the known small degree points
  ////////////////////////////////////////////////////////////////////////
    
  // Hard code as much as possible, since Magma changes
  // how it orders the output of "Support" mod different primes
  
  basePt := [-1 , 0 , 1];
  
  // mostly singular
  pts := 
  [
    [  0, 1, 0 ],
    [  0, 0, 1 ],
    [ -1, 0, 1 ],
    [  0, 1, 1 ],
    [  1, 0, 0 ],
    [ -1, 1, 1 ],
    [ -1, 1, 0 ]
  ];    
    
  // Verify that these generate the torsion  
  p := 3;
  Cp<[T]> := Curve(Reduction(Xp,p));
    pic,mPic := ClassGroup(Cp);    
  basePt := &+Places(Cp![-1,0,1]);
  divs := {@
         &+Places(Cp!pt) - Degree(&+Places(Cp!pt))*basePt
         : pt in pts @} ;  
  
  global, mGlobal := 
     sub<pic | [(Inverse(mPic))(divs[i]) : i in [1..#divs]]>;  
  Invariants(global); // [ 133, 1995 ]    
   

  //////////////////////////////////////////////////////////////////////
  // Compute the image of Abel--Jacobi mod 3
  //////////////////////////////////////////////////////////////////////  
    
  "There are", [#Places(Cp,i) : i in [1..3]], "places of degree 1, 2, and 3 over F_3"; // [12,0,16];    
    // the 12 degree 1 points lift to Q so we compute with the 16 cubic points
    
  validCubicImages := {@@};
  for pl in Places(Cp,3) do
      D := Divisor(pl) - Degree(pl)*basePt;
      if Inverse(mPic)(D) in global then
        validCubicImages := 
        validCubicImages join {@Inverse(mPic)(D)@};
      end if;
  end for;
  "The rational places all lift to Q, and",  #validCubicImages, "of the other places are in the image of Abel--Jacobi"; // 0
 
